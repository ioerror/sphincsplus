name: Tests golang bindings (tags) for ref implementation

on:
  - push
  - pull_request

jobs:
  build:
    runs-on: ${{ matrix.OS }}
    strategy:
      matrix:
        OS: ["ubuntu-latest", "macos-latest"]
        hash:
          - sha2
          - shake
          - haraka
        size:
          - 128
          - 192
          - 256
        option:
          - s
          - f
        thash:
          - simple
          - robust
        go-version: ["1.22.x"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Build with tag
        run: |
          export CGO_ENABLE=1
          export TAG=sphincs_${{ matrix.hash }}_${{ matrix.size }}${{ matrix.option }}
          export THASH=${{ matrix.thash }}
          export HASH=${{ matrix.hash }}
          #cd ref/ && go test --tags=$TAG,$THASH,$HASH -v ./...
          cd ref/ && go build --tags=$TAG -v

      - name: Run go top-level test with tag
        run: |
          export CGO_ENABLE=1
          export TAG=sphincs_${{ matrix.hash }}_${{ matrix.size }}${{ matrix.option }}
          export THASH=${{ matrix.thash }}
          export HASH=${{ matrix.hash }}
          #cd ref/ && go test --tags=$TAG,$THASH,$HASH -v ./...
          cd ref/ && go test --tags=$TAG -v 

      - name: Run all go tests with tag
        run: |
          export CGO_ENABLE=1
          export TAG=sphincs_${{ matrix.hash }}_${{ matrix.size }}${{ matrix.option }}
          export THASH=${{ matrix.thash }}
          export HASH=${{ matrix.hash }}
          #cd ref/ && go test --tags=$TAG,$THASH,$HASH -v ./...
          cd ref/ && go test --tags=$TAG -v ./...

#  vim: set ft=yaml ts=2 sw=2 et :
